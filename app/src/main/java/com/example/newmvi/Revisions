|===================================================================================================|

вот вместо такого repo.getTodoList().also { SubDB.list.addAll(it) }
лучше писать
            val todoList = repo.getTodoList()
            SubDB.list.addAll(todoList)
            todoList
TODO: +
|===================================================================================================|

для чего SubDb я вообще пока не особо понимаю, но даже если оно и надо, то наружу не
должны выставляться мутабельные коллекции и var`ки.
Тебе по хорошему надо запретить изменять состояние таких объектов снаружи.

TODO: SubDB - используеться вместо/как Room +
|===================================================================================================|

базовая вьюмодель не относится к mvi.
Обычно у вьюмоделей, фрагментов и активностей есть базовые классы и они все вместе хранятся в отдельном пакетике,
 а mvi про андроид вообще ничего не знает
TODO:          ???
|===================================================================================================|

BaseViewModel.event тебе не нужен публичный. Это чисто внутренне поле для связывания всей цепочки

TODO: +
|===================================================================================================|

BaseCommand это не прям Base Command. Это все равно что  enum классы называть Base-чото там, а его значения считать реализациями

TODO: +
|===================================================================================================|

BaseRouterImpl тоже неправильное имя.
В имплементации всегда указывается какая-то конкретика типо NavigationComponentRouter или FragmentManagerRouter.
Если пишешь Impl - просто RouterImpl лучше было бы.

TODO: +
|===================================================================================================|

Бесполезные комментарии лучше удаляй

TODO: (Коментарии типа SEPARATOR по моему мнению улучшают читаемость) +
|===================================================================================================|

Ты же используешь viewBinding.
Тебе не нужно сохранять вьюшки в поля.
Лучше сохранять сам биндинг.
Обычно на проектах процесс получения биндинга зашит внутри базового фрагмента или активности и все через дженерики автоматически выполняется.
Тебе такое пока делать не надо, но в целом лучше хранить биндинг в переменной.

TODO: (так как View многократно использовался, било удобнее инициализировать) +
|===================================================================================================|

initComponentsUI()
initListeners()

lifecycleScope.launchWhenStarted {
      viewModel.state.collect {
             render(it)
      }
}

вот такие приколы в onCreateView не стоит писать. Есть OnViewCreated для всей работы и настройки фрагмента

TODO: +
|===================================================================================================|

private var _todo = _Todo("", 0) - этого поля во фрагменте быть не должно.
У тебя есть State чтобы хранить состояние.

TODO: _Todo - это не { State } а { Item } списка
|===================================================================================================|

onClick - лучше вешать индивидуально на каждую вьюшку, а не делать потом ветвление по айдишникам

TODO: +
|===================================================================================================|

SubDB.list.add(_todo) это на UI быть не должно и,
 как я уже говорил раньше, ты в принципе
 не должен иметь возможности так добавлять что-то в списки

TODO: +
|===================================================================================================|

